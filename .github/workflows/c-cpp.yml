# Nama alur kerja (workflow) yang akan ditampilkan di tab "Actions" pada repositori GitHub Anda.
name: Installer for Windows

# Pemicu (Triggers): Mendefinisikan kapan alur kerja ini akan dijalankan secara otomatis.
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Jobs: Daftar pekerjaan (tasks) yang akan dieksekusi dalam alur kerja ini.
jobs:
  build:
    # 'runs-on' menentukan jenis mesin virtual yang akan digunakan untuk menjalankan pekerjaan ini.
    # 'windows-latest' menjamin lingkungan build yang bersih setiap saat.
    runs-on: windows-latest

    # Steps: Rangkaian langkah-langkah sekuensial yang akan dieksekusi oleh pekerjaan "build".
    steps:
      # Langkah 1: Checkout Kode Sumber
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Mengunduh semua submodule seperti Leptonica.
          submodules: 'recursive'

      # Langkah 2: Setup Visual Studio Build Tools
      - name: Setup Visual Studio Build Tools
        uses: microsoft/setup-msbuild@v2

      # Langkah 3: Setup Developer Command Prompt
      - name: Setup Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      # Langkah 4: Cache vcpkg untuk mempercepat build
      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            C:/vcpkg
            C:/vcpkg/installed
          key: ${{ runner.os }}-vcpkg-msvc-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-msvc-

      # Langkah 5: Setup vcpkg
      - name: Setup vcpkg
        run: |
          if (!(Test-Path "C:/vcpkg")) {
            git clone https://github.com/Microsoft/vcpkg.git C:/vcpkg
            cd C:/vcpkg
            ./bootstrap-vcpkg.bat
          }
          echo "C:/vcpkg" >> $env:GITHUB_PATH
        shell: pwsh

      # Langkah 6: Setup Ninja build system
      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      # Langkah 7: Instal Dependensi Menggunakan vcpkg (minimal dependencies)
      - name: Install dependencies via vcpkg
        run: |
          vcpkg install leptonica:x64-windows
          vcpkg install libarchive:x64-windows
          echo "Installed packages:"
          vcpkg list
        shell: pwsh

      # Langkah 8: Mengkonfigurasi Proyek dengan CMake (minimal build)
      - name: Configure CMake
        run: >
          cmake -G "Visual Studio 17 2022" -A x64 -S . -B build
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DBUILD_TRAINING_TOOLS=OFF
          -DSW_BUILD=OFF
          -DBUILD_SHARED_LIBS=ON
          -DOPENMP_BUILD=OFF
          -DCPPAN_BUILD=OFF
          -DUSE_SYSTEM_ICU=OFF
          -DDISABLE_CURL=ON
          -DCMAKE_INSTALL_PREFIX=build/install

      # Langkah 9: Mengkompilasi Kode dan Menjalankan Instalasi
      - name: Build
        run: cmake --build build --config Release --target install

      # Langkah 10: Menginstal NSIS (Alat Pembuat Installer)
      - name: Install NSIS
        run: choco install nsis -y

      # Langkah 11: Membuat Skrip NSIS
      - name: Create NSIS script
        shell: pwsh
        run: |
          # Create installer directory structure
          New-Item -ItemType Directory -Force -Path "nsis/installer"

          # Copy built tesseract files
          if (Test-Path "build/install/bin") {
            Copy-Item -Recurse "build/install/bin/*" "nsis/installer/"
          }
          # Create a minimal share/tessdata for the installer to work
          New-Item -ItemType Directory -Force -Path "nsis/installer/share/tessdata"

          # Create LICENSE file if it doesn't exist
          if (!(Test-Path "nsis/LICENSE")) {
            @"
          Apache License
          Version 2.0, January 2004
          http://www.apache.org/licenses/
          "@ | Out-File -FilePath "nsis/LICENSE" -Encoding UTF8
          }

          # Create the NSIS script file
          @"
          !define PRODUCT_NAME "Tesseract OCR"
          !define PRODUCT_VERSION "5.5.1"
          !define PRODUCT_PUBLISHER "Tesseract OCR Team"
          !define PRODUCT_WEB_SITE "https://github.com/tesseract-ocr/tesseract"
          !define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\tesseract.exe"
          !define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${PRODUCT_NAME}"
          !define PRODUCT_UNINST_ROOT_KEY "HKLM"

          ; Modern UI
          !include "MUI2.nsh"

          ; General
          Name "`${PRODUCT_NAME} `${PRODUCT_VERSION}"
          OutFile "tesseract-ocr-`${PRODUCT_VERSION}-setup.exe"
          InstallDir "`$PROGRAMFILES64\Tesseract-OCR"
          InstallDirRegKey HKLM "`${PRODUCT_DIR_REGKEY}" ""
          ShowInstDetails show
          ShowUnInstDetails show
          SetCompressor lzma

          ; Interface Settings
          !define MUI_ABORTWARNING
          !define MUI_ICON "`${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
          !define MUI_UNICON "`${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

          ; Pages
          !insertmacro MUI_PAGE_WELCOME
          !insertmacro MUI_PAGE_LICENSE "nsis/LICENSE"
          !insertmacro MUI_PAGE_DIRECTORY
          !insertmacro MUI_PAGE_INSTFILES
          !insertmacro MUI_PAGE_FINISH

          ; Uninstaller pages
          !insertmacro MUI_UNPAGE_INSTFILES

          ; Language files
          !insertmacro MUI_LANGUAGE "English"

          # [DIHAPUS] Baris ini menyebabkan error dan tidak lagi diperlukan.
          # !insertmacro MUI_RESERVEFILE_INSTALLOPTIONS

          Section "MainSection" SEC01
            SetOutPath "`$INSTDIR"
            SetOverwrite ifnewer

            ; Copy files
            File /r /x "*.pdb" "nsis/installer/*"

            ; Create uninstaller
            WriteUninstaller "`$INSTDIR\uninst.exe"

            ; Registry entries
            WriteRegStr HKLM "`${PRODUCT_DIR_REGKEY}" "" "`$INSTDIR\tesseract.exe"
            WriteRegStr `${PRODUCT_UNINST_ROOT_KEY} "`${PRODUCT_UNINST_KEY}" "DisplayName" "`$(^Name)"
            WriteRegStr `${PRODUCT_UNINST_ROOT_KEY} "`${PRODUCT_UNINST_KEY}" "UninstallString" "`$INSTDIR\uninst.exe"
            WriteRegStr `${PRODUCT_UNINST_ROOT_KEY} "`${PRODUCT_UNINST_KEY}" "DisplayIcon" "`$INSTDIR\tesseract.exe"
            WriteRegStr `${PRODUCT_UNINST_ROOT_KEY} "`${PRODUCT_UNINST_KEY}" "DisplayVersion" "`${PRODUCT_VERSION}"
            WriteRegStr `${PRODUCT_UNINST_ROOT_KEY} "`${PRODUCT_UNINST_KEY}" "URLInfoAbout" "`${PRODUCT_WEB_SITE}"
            WriteRegStr `${PRODUCT_UNINST_ROOT_KEY} "`${PRODUCT_UNINST_KEY}" "Publisher" "`${PRODUCT_PUBLISHER}"

          SectionEnd

          Section "Uninstall"
            ; Remove files and directories
            RMDir /r "`$INSTDIR"

            ; Remove registry entries
            DeleteRegKey `${PRODUCT_UNINST_ROOT_KEY} "`${PRODUCT_UNINST_KEY}"
            DeleteRegKey HKLM "`${PRODUCT_DIR_REGKEY}"

            SetAutoClose true
          SectionEnd
          "@ | Out-File -FilePath "nsis/tesseract.nsi" -Encoding UTF8

      # Langkah 12: Build NSIS installer
      - name: Build NSIS installer
        run: |
          cd nsis
          & "C:\Program Files (x86)\NSIS\makensis.exe" tesseract.nsi
        shell: pwsh

      # Langkah 13: Mengunggah Installer sebagai "Artifact"
      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: tesseract-ocr-installer-windows
          path: nsis/tesseract-ocr-*.exe
